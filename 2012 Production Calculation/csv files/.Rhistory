a12=0.01
a21=0.01
a11=a22=0.03
J1=eval(J)
J1
J
N1star
N1=eval(N1star)
N1
N2=eval(N2star)
J1=eval(J)
J1
J2=eval(J)#
J2
a12=a21=0.03#
a11=a22=0.01#
N1=eval(N1star)#
N2=eval(N2star)#
J2=eval(J)#
J2
a12=a21=0.03#
a11=a22=0.03#
N1=eval(N1star)#
N2=eval(N2star)#
J3=eval(J)#
J3
r1
r2
a11=a22=0.1#
a12=0.05#
a21=0.01#
N1=eval(N1star);N2=eval(N2star)#
N1#
N2#
K1=expression(1/a11)#
K2=expression(1/a22)#
eval(K1)#
eval(K2)#
a=matrix(c(a11,a12,a21,a22),ncol=2,byrow=TRUE)#
N1=0:200#
N2=0:200#
N2iso=expression(1/a[2,2]-(a[2,1]/a[2,2])*N1)#
N1iso=expression(1/a[1,1]-(a[1,2]/a[1,1])*N2)#
plot(eval(N1iso),N2,type='l',xlim=c(0,50),ylim=c(0,50),ylab=expression("N"[2]));lines(N1,eval(N2iso),type='l')
a11=a22=0.1#
a12=0.05#
a21=0.01#
N1=eval(N1star);N2=eval(N2star)#
N1#
N2#
K1=expression(1/a11)#
K2=expression(1/a22)#
eval(K1)#
eval(K2)#
a=matrix(c(a11,a12,a21,a22),ncol=2,byrow=TRUE)#
N1=0:20#
N2=0:20#
N2iso=expression(1/a[2,2]-(a[2,1]/a[2,2])*N1)#
N1iso=expression(1/a[1,1]-(a[1,2]/a[1,1])*N2)#
plot(eval(N1iso),N2,type='l',xlim=c(0,20),ylim=c(0,20),ylab=expression("N"[2]));lines(N1,eval(N2iso),type='l')
eigen(J2)
eigen(J1)
eigen(J3)
J3
Aq=matrix(c(-1,-10,0,0,0.1,0,-10,0,0,0.1,0,-10,0,0,0.1,0),nrow=4,byrow=TRUE)
Aq
M=Aq*runif(S^2)
S=nrow(Aq)
M=Aq*runif(S^2)
eM=eigen(M)[["values"]]
eM
deM=max(Re(eM))
intraDD=sqrt(sum(diag(M)^2/S))
diag(M)=0
IS=sqrt(sum(M^2)/(S*(S-1)))
args(pimmlawton)
args(pimmlawton)#
function(mat,N=1,omni.i=NA,omni.j=NA,omega=NULL)
args(pimmlawton) function(mat,N=1,omni.i=NA,omni.j=NA,omega=NULL)
args(pimmlawton)
set.seed(1)
pimmlawton(Aq)
out.A=pimmlawton(Aq,N=2000)
summary(out.A)
pairs(out.A)
RT.A=-1/out.A[["DomEig"]]
summary(RT>A)
summary(RT.A)
sum(RT.A>150)/2000
A.fast=RT.A[RT.A<150]
histA=hist(A.fast,breaks=seq(0,150,by=5),main=NULL)
clogistic=function(times,y,parms){#
n=y[1]#
r=parms[1]#
alpha=parms[2]#
dN.dt=r*n*(1-alpha*n)#
return(list(c(dN.dt)))#
}
prms=c(r=1,alpha=0.01)
init.N=c(1)
init.N
t.s=seq(0.1,10,by=0.1)
library(deSolve)
out=ode(y=init.N,times=t.s,clogistic,parms=prms)
out
plot(out[,1],out[,2],type='l',xlab='time',ylab='n')
prms=c(r=1,alpha=0.02)
prms=c(r=1,alpha=0.02)#
init.N=c(1)#
t.s=seq(0.1,10,by=0.1)#
library(deSolve)#
out=ode(y=init.N,times=t.s,clogistic,parms=prms)#
plot(out[,1],out[,2],type='l',xlab='time',ylab='n')
prms=c(r=1,alpha=0.01)#
init.N=c(1)#
t.s=seq(0.1,10,by=0.1)#
library(deSolve)#
out=ode(y=init.N,times=t.s,clogistic,parms=prms)#
plot(out[,1],out[,2],type='l',xlab='time',ylab='n')
prms=c(r=5,alpha=0.01)#
init.N=c(1)#
t.s=seq(0.1,10,by=0.1)#
library(deSolve)#
out=ode(y=init.N,times=t.s,clogistic,parms=prms)#
plot(out[,1],out[,2],type='l',xlab='time',ylab='n')
prms=c(r=1,alpha=0.01)#
init.N=c(1)#
t.s=seq(0.1,10,by=0.1)#
library(deSolve)#
out=ode(y=init.N,times=t.s,clogistic,parms=prms)#
plot(out[,1],out[,2],type='l',xlab='time',ylab='n')
library(maps)
load("/Users/patk9105/Downloads/AUT_adm1.RData")
install.packages("regeos")
install.packages("rgeos")
map("Europe")
map("europe")
library(mapproj)
map("europe")
map("Europe")
map(database='world')
map(database='weurope')
map(database='europe')
map(database='Austria')
country2001 <- c("Austria", "Belgium", "Switzerland", #
  "Czechoslovakia", "Germany", "Denmark", "Spain", "Finland", "France", #
  "UK", "Greece", "Hungary", "Ireland", "Israel", "Italy", #
  "Luxembourg", "Netherlands", "Norway", "Poland", "Portugal", #
  "Sweden", "Slovenia") #
  color2001 <- c("green", "yellow","red","red", "red", "red", "red", #
  "red", "green", "red", "red", "red", "red", "red", "red", "red", #
  "red", "blue", "red", "red", "red", "orange") #
#
europe$names[grep("Sicily", europe$names)] <- "Italy:Sicily" #
europe$names[grep("Sardinia", europe$names)] <- "Italy:Sardinia" #
match <- match.map(europe,country2001) #
color <- color2001[match] #
map(database="world", fill=TRUE, col=color,   #
xlim=c(-25,70),ylim=c(35,71)) #
#
text(0, 45, "France")
country2001 <- c("Austria", "Belgium", "Switzerland", "Czechoslovakia", "Germany", "Denmark", "Spain", "Finland", "France", "UK", "Greece", "Hungary", "Ireland", "Israel", "Italy", "Luxembourg", "Netherlands", "Norway", "Poland", "Portugal", "Sweden", "Slovenia") #
  color2001 <- c("green", "yellow","red","red", "red", "red", "red", "red", "green", "red", "red", "red", "red", "red", "red", "red", "red", "blue", "red", "red", "red", "orange") #
#
europe$names[grep("Sicily", europe$names)] <- "Italy:Sicily" #
europe$names[grep("Sardinia", europe$names)] <- "Italy:Sardinia" #
match <- match.map(europe,country2001) #
color <- color2001[match] #
map(database="world", fill=TRUE, col=color,   #
xlim=c(-25,70),ylim=c(35,71)) #
#
text(0, 45, "France")
europe<-map(database="world", fill=FALSE,#
plot=TRUE,xlim=c(-25,70),ylim=c(35,71))
map('usa')
map('florida')
map('state')
map('state','florida')
map('state','florida')#
map('rivers',add=TRUE)
library(mapdata)
map('state','florida')#
map('rivers',add=TRUE)
map('state','florida')#
map('rivers',add=TRUE,col='blue')
map('state')#
map('rivers',add=TRUE,col='blue')
test=mean(c(3,4,5,6,7))
tet
test
anova_results
method
?map
library(maps)
map("minnesota")
map("minn")
?map
map("usa")
map("midwest")
map("wisconsin")
map("state","wisconsin")
map("state",c("minnesota","wisconsin","iowa","northdakota","southdakota")
)
map("state",c("minnesota","wisconsin","iowa","north dakota","south dakota"))
map("state",c("minnesota","wisconsin","iowa","north dakota","south dakota","illinois","indiana","michigan","ohio"))
((2/3)^3)*((1-(2/3))^5-3)
((2/3)^7)*((1-(2/3))^7-7)
1-(2/3)67-7
1-(2/3)^7-7
7-7
(1-(2/3))^7-7
(1-(2/3))^(7-7)
((2/3)^7)*(1-(2/3))^(7-7)
(1/3)
(1/3)^7
1/128
(1/128)
(1/2)^7
log(128)
128/129
log(64)
4.8520+-0.6931
1/128
64/65
(1/3)/(65/64*3)
(1/3)/(65/(64*3))
64/65
(1/128)*(2/3)
1/(64*3)
(1/(64*3))*0.3333333
(1/(64*3))*0.666666
0.33333333/((1/(64*3))*0.666666)
64/(64*3)
64/65
1-(64/65)
0.6666666*(1/128)
65/(64*3)
(1/3)/(1/128)
64*3
(1/3)/(65/192)
64/65
(65/192)/(1/3)
5/12
7/12
(5/12)/(7/1536)
640/7
(640/7)*(5/12)
640/647
(1/3)/(640/7)
(640/7)/(1/3)
128/(640/7)
(640/7)/128
(5/12)/(640/7)
(640/7)/(5/12)
(640/7)+(5/12)
(640/7)*(1/128)
640/647
(5/12)*(640/647)
1/128
5/12
(1/65)*(640/7)
(640/7)+(1/128)
(5/12)*128
(1/3)/(7/640)
(1/3)/(640/7)
(5/12)/(65/64*3)
(1/3)/(5/12)
(1/3)/(7/12)
(5/12)/128
128/(5/12)
128*(5/12)
(5/12)*(1/128)
(1/3)/(65/64*3)
(64*3)/(3*65)
(1/3)/(65/(64*3))
(5/12)/(7/12)
5/7
(5/12)/(5/7)
(5/7)/(5/12)
(5/7)/(640/7)
1-(5/7)/(640/7)
(1/128)*(7/12)
(1/3)+(5/12)
(1/3)/(3/4)
(7/12)*(1/128)
(5/12)+((7/12)*(1/128))
(5/12)/((5/12)+((7/12)*(1/128)))
640/647
260/387
conc=c(0,5,10,25,50,100,200)#
abs=c(0.126,0.182,0.195,0.276,0.452,0.707,1.342)#
plot(conc,abs)
summary(lm(conc~abs))
plot(conc,abs)
summary(lm(abs~conc)) # y =
plot(abs,conc)
xs=c(0.991,0.979,0.260,0.710,0.605,1.173,0.811,0.904,0.797)
for (i in 1:length(xs)){Pconc[i]=-22.443+166.799*xs[i]}
Pconc=c()#
for (i in 1:length(xs)){Pconc[i]=-22.443+166.799*xs[i]}
Pconc
Pconc*0.03
4.28/540
Pconc[3]*10
Pconc2=c()
for(i in 1:length(xs)){Pconc2[i]=0.1350+0.005987*xs[i]}
Pconc2
install.packages("BRugs")
LLlengths<-file.choose()
LLlengths<-file.choose()
head(LLlengths)
LLlengths<-read.csv(LLlengths)
mag<-file.choose()
mg<-read.csv(mag)
head(LLlengths)
head(mag)
mg<-read.csv(mag)
mag<-read.csv(mag)
mg<-read.csv(mag)
head(mag)
length<-c()#
for(i in 1:nrow(LLlengths)){#
	rowi<-match(LLlengths$magnification[i],mag$magnification)#
	length[i]<-LLlengths$lengthPixels[i]/mag$length_pixels[rowi]#
}
length
LLlengths$length_mm<-length
width<-c()#
for(i in 1:nrow(LLlengths)){#
	rowi<-match(LLlengths$magnification[i],mag$magnification)#
	width[i]<-LLlengths$widthPixels[i]/mag$length_pixels[rowi]#
}
LLlengths$width_mm<-width
head(LLlength)
head(LLlengths)
LLmeas<-file.choose()
LLmeas<-read.csv(LLmeas)
LLmeas
LLmeas<-read.csv(LLmeas)
LLmeas<-file.choose()
LLmeas<-read.csv(LLmeas)
setwd('~/Documents/Notre Dame/Long Lake data')
list.files()
setwd('~/Documents/Notre Dame/Long Lake data/2012 Production Calculation')
list.files()
setwd('~/Documents/Notre Dame/Long Lake data/2012 Production Calculation/csv files')
list.files()
LLmeas<-read.csv('LL_Measurements.csv')
setwd('~/Documents/Notre Dame/Long Lake data/2012 Production Calculation/csv files')#
LLmeas<-read.csv('LL_Measurements.csv')
head(LLmeas)
colnames(LLlengths)
colnames(LLmeas)
colnames(LLmeas)<-c('lakeID','dateSample','taxa','length_mm','width_mm')
head(LLlengths)
LLlengths<-LLlengths[,-c(4,5,6)]
head(LLlengths)
LLlengths<-rbind(LLmeas,LLlengths)
LLlengths
unique(LLlengths$dateSample[LLlengths$lakeID=='EL'])
unique(LLlengths$dateSample[LLlengths$lakeID=='WL'])
